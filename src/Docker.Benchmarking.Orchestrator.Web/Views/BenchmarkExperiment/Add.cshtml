@model Docker.Benchmarking.Orchestrator.Web.ViewModels.AddBenchmarkExperimentViewModel

@{
    ViewData["Title"] = "Add New Application Test";
}

<h1 class="h2">@ViewData["Title"]</h1>
<hr />

<form asp-action="Add" asp-controller="BenchmarkExperiment" method="post">
    <div class="row">
        <div class="col-md-12">
            <div asp-validation-summary="All" class="text-danger"></div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="BenchmarkingName" class="control-label"></label>
                <input asp-for="BenchmarkingName" class="form-control" />
                <span asp-validation-for="BenchmarkingName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ExperimentReference" class="control-label"></label>
                <input asp-for="ExperimentReference" class="form-control" />
                <span asp-validation-for="ExperimentReference" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <textarea asp-for="Description" class="form-control"></textarea>
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Host" class="control-label"></label>
                <select asp-for="Host" asp-items="@Model.Hosts" class="form-control js-example-basic-single">
                    <option selected="selected" value="">Please select the host to benchmark</option>
                </select>
                <span asp-validation-for="Host" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="BenchmarkHost" class="control-label"></label>
                <select asp-for="BenchmarkHost" asp-items="@Model.BenchmarkHosts" class="form-control js-example-basic-single">
                    <option selected="selected" value="">Please select the host to launch the benchmark</option>
                </select>
                <span asp-validation-for="Host" class="text-danger"></span>
            </div>
            <div class="form-group d-none" id="database-host">
                <label asp-for="DatabaseHost" class="control-label"></label>
                <select asp-for="DatabaseHost" asp-items="@Model.DatabaseHosts" class="form-control js-example-basic-single">
                    <option selected="selected" value="">Please select the host to launch database image on (optional)</option>
                </select>
                <span asp-validation-for="DatabaseHost" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Application" class="control-label"></label>
                <select asp-for="Application" asp-items="@Model.Applications" class="form-control js-example-basic-single">
                    <option selected="selected" value="">Please select the application</option>
                </select>
                <span asp-validation-for="Application" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ApacheTestFileId" class="control-label"></label>
                <select asp-for="ApacheTestFileId" asp-items="@Model.ApacheTestFiles" class="form-control js-example-basic-single">
                    <option selected="selected" value="">Please select the apache testfile to use for the benchmark</option>
                </select>
                <span asp-validation-for="ApacheTestFileId" class="text-danger"></span>
            </div>

        </div>
        <div class="col-md-6">
            <div class="form-group">
                <div class="checkbox">
                    <label>
                        <input asp-for="CaptureContainerMetrics" /> @Html.DisplayNameFor(model => model.CaptureContainerMetrics)
                    </label>
                </div>
            </div>
            <div class="form-group">
                <label asp-for="BenchmarkTimeLength" class="control-label"></label>
                <select asp-for="BenchmarkTimeLength" class="form-control js-example-basic-single">
                    <option selected="selected" value="">Select length of experiment</option>
                    <option value="60000">1 minute</option>
                    <option value="120000">2 minutes</option>
                    <option value="300000">5 minutes</option>
                    <option value="600000">10 minutes</option>
                    <option value="900000">15 minutes</option>
                    <option value="1800000">30 minutes</option>
                    <option value="3600000">60 minutes</option>
                </select>
                <span asp-validation-for="BenchmarkTimeLength" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ConcurrentUsers" class="control-label"></label>
                <input asp-for="ConcurrentUsers" class="form-control" />
                <span asp-validation-for="ConcurrentUsers" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ApdexTSeconds" class="control-label"></label>
                <input asp-for="ApdexTSeconds" class="form-control" />
                <span asp-validation-for="ApdexTSeconds" class="text-danger"></span>
            </div>
            <div class="form-group">
                <div class="checkbox">
                    <label>
                        <input asp-for="SetAsBaseLine" /> @Html.DisplayNameFor(model => model.SetAsBaseLine)
                    </label>
                </div>
            </div>
            <div class="form-group">
                <label asp-for="TypeOfTest" class="control-label"></label>
                <select asp-for="TypeOfTest" class="form-control js-example-basic-single" asp-items="Html.GetEnumSelectList<Docker.Benchmarking.Orchestrator.Core.Enums.TestType>()">
                    <option selected="selected" value="">Please select an application type</option>
                </select>
                <span asp-validation-for="TypeOfTest" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label class="control-label">Testplan Overrides</label>
                <table id="parameters-table" class="table table-striped table-bordered" width="100%">
                    <thead>
                        <tr>
                            <th>Key</th>
                            <th>Value</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody data-bind="foreach: Variables">
                        <tr>
                            <td><input data-bind='attr: { value: name, name: "Variables["+$index()+"].Name"}' class="form-control" required /></td>
                            <td><input data-bind='attr: { value: value, name: "Variables["+$index()+"].Value"}' class="form-control" required /></td>
                            <td><a href="#" data-bind="click: $root.removeItem" class="btn btn-danger">Remove</a></td>
                        </tr>
                    </tbody>
                </table>
            </div>
            <div class="form-group pull-right">
                <button data-bind="click: addItem.bind($data, null)" class="btn btn-danger">Add Variable</button>
            </div>

        </div>
        <div class="col-md-12">
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary btn-lg" />
            </div>
        </div>
    </div>
</form>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script src="https://cdnjs.cloudflare.com/ajax/libs/knockout/3.4.2/knockout-min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/knockout.mapping/2.4.1/knockout.mapping.min.js"></script>
    <script>
        $(function () {
            var items = @Html.Raw(Json.Serialize(Model.Variables));
            ko.applyBindings(viewModel);

            $.each(items, function (i, item) {
                var variableItem = new Variable(item);
                viewModel.Variables.push(variableItem);
            });
        });

        function Variable(item) {
                var self = this;
                self.name = item.name;
                self.value = item.value;
            }

            var viewModel = {
                Variables: ko.observableArray(),
                addItem: function (select) {
                    var preItem = @Html.Raw(Json.Serialize(new Docker.Benchmarking.Orchestrator.Web.ViewModels.BenchmarkExperimentVariableViewModel()));
                    if (select == null) {
                        var item = new Variable(preItem);
                        return viewModel.Variables.push(item);
                    }
                },
                removeItem: function (item) { viewModel.Variables.remove(item) }
            };

    </script>


}
