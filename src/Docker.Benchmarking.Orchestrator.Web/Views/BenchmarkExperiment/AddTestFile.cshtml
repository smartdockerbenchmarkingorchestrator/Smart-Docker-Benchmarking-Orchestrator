@model Docker.Benchmarking.Orchestrator.Web.ViewModels.AddApacheJmeterTestFileViewModel

@{
    ViewData["Title"] = "Add New Apache Test File";
}

@section Styles {
    <link rel="stylesheet" href="~/lib/code-mirror/lib/codemirror.css" />
    <link rel="stylesheet" href="~/lib/code-mirror/addon/hint/show-hint.css" />
    <style type="text/css">
        .CodeMirror {
            border: 1px solid #eee;
        }
    </style>

}
<h1 class="h2">@ViewData["Title"]</h1>

<hr />
<form asp-action="AddTestFile" asp-controller="BenchmarkExperiment" method="post">
    <div class="row">
        <div class="col-md-12">
            <div asp-validation-summary="All" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <textarea asp-for="Description" class="form-control"></textarea>
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="TestUpload" class="control-label"></label>
                <textarea asp-for="TestUpload" class="form-control"></textarea>
                <span asp-validation-for="TestUpload" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label class="control-label">Thread Names to Ignore when processing results from this test plan:</label>
                <table id="parameters-table" class="table table-striped table-bordered" width="100%">
                    <tbody data-bind="foreach: ThreadNamesToIgnore">
                        <tr>
                            <td><input data-bind='attr: { value: $data, name: "ThreadNamesToIgnore["+$index()+"]"}' class="form-control" required /></td>
                            <td><a href="#" data-bind="click: $root.removeItem" class="btn btn-danger">Remove</a></td>
                        </tr>
                    </tbody>
                </table>
            </div>
            <div class="form-group pull-right">
                <button data-bind="click: addItem.bind($data, null)" class="btn btn-danger">Add</button>
            </div>

            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary btn-lg" />
            </div>
        </div>
    </div>
</form>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script src="https://cdnjs.cloudflare.com/ajax/libs/knockout/3.4.2/knockout-min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/knockout.mapping/2.4.1/knockout.mapping.min.js"></script>
    <script src="~/lib/code-mirror/lib/codemirror.js"></script>
    <script src="~/lib/code-mirror/addon/hint/show-hint.js"></script>
    <script src="~/lib/code-mirror/addon/hint/xml-hint.js"></script>
    <script src="~/lib/code-mirror/mode/xml/xml.js"></script>
    <script>
        var editor = CodeMirror.fromTextArea(TestUpload, {
            lineNumbers: true
        });

         $(function () {
            ko.applyBindings(viewModel);
        });

        var viewModel = {
                ThreadNamesToIgnore: ko.observableArray(@Html.Raw(Json.Serialize(Model.ThreadNamesToIgnore))),
                addItem: function (select) {
                    if (select == null) {
                        return viewModel.ThreadNamesToIgnore.push(select);
                    }
                },
                removeItem: function (item) { viewModel.ThreadNamesToIgnore.remove(item) }
            };
    </script>
}