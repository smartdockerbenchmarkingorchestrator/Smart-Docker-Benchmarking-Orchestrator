@model IEnumerable<Docker.Benchmarking.Orchestrator.Core.Entities.DockerImage>

@{
    ViewData["Title"] = "Docker Images";
}

<div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pb-2 mb-3 border-bottom">
    <h1 class="h2">@ViewData["Title"]</h1>
</div>

<div class="table-responsive">
    <table id="example" class="table table-striped table-sm" style="width:100%">
        <thead>
            <tr>
                <th></th>
                <th>
                    @Html.DisplayNameFor(model => model.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Description)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ImageName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ImageTag)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.PrivateRepository)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.PrivateRepositoryHost)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.PrivateRepositoryUsername)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.PrivateRepositoryPassword)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ExternalPort)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.InternalPort)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ImageType)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.DateTimeCreated)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Id)
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {

            <tr>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                    @Html.ActionLink("Details", "Image", new { id = item.Id })
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ImageName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ImageTag)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PrivateRepository)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PrivateRepositoryHost)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PrivateRepositoryUsername)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PrivateRepositoryPassword)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ExternalPort)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.InternalPort)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ImageType)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DateTimeCreated)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Id)
                </td>
            </tr>
            }
        </tbody>
        <tfoot>
            <tr>
                <th></th>
                <th>
                    @Html.DisplayNameFor(model => model.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Description)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ImageName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ImageTag)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.PrivateRepository)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.PrivateRepositoryHost)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.PrivateRepositoryUsername)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.PrivateRepositoryPassword)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ExternalPort)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.InternalPort)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ImageType)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.DateTimeCreated)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Id)
                </th>
            </tr>

        </tfoot>
    </table>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            var table = $('#example').DataTable({
                dom: 'Bfrtip',
                paging: false,
                saveState: true,
                buttons: [
                    'copy', 'csv', 'excel', 'pdf', 'print'
                ],
                initComplete: function () {
                    this.api().columns().every(function () {
                        var column = this;
                        var select = $('<select><option value=""></option></select>')
                            .appendTo($(column.footer()).empty())
                            .on('change', function () {
                                var val = $.fn.dataTable.util.escapeRegex(
                                    $(this).val()
                                );

                                column
                                    .search(val ? '^' + val + '$' : '', true, false)
                                    .draw();
                            });

                        column.data().unique().sort().each(function (d, j) {
                            select.append('<option value="' + d + '">' + d + '</option>');
                        });
                    });
                }
            });

            $('a.toggle-vis').on('click', function (e) {
                e.preventDefault();

                // Get the column API object
                var column = table.column($(this).attr('data-column'));

                // Toggle the visibility
                column.visible(!column.visible());
            });
        });
    </script>
}